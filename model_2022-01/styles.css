/*  B A S E  | п о в с е м е с т н о е  */

*,
*::before,
*::after {
	/* отныне margin и padding обнулены, пока не укажу обратного;
	   padding и border входят в width и height */
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: Roboto, serif;
}

:focus {
	outline: none;
}

@media (max-width: 599px) {
	:root {
		/* определяет "переменные" (custom properties) для селектора,
		   данные значения будут видимы для всех его наследников */
		--fs-h1: 2rem;
		--fs-h3: 1.5rem;
		--fs-h4: 1.125rem;
		--fs-body: 1rem;
	}
}

@media (min-width: 600px) and (max-width: 1023px) {
	:root {
		/* переопределяет "переменные" если ширина экрана не меньше 500px */
		--fs-h1: 3rem;
		--fs-h3: 2.25rem;
		--fs-h4: 1.25rem;
		--fs-body: 1rem;
	}
}

@media (min-width: 1024px) {
	:root {
		/* переопределяет "переменные" если ширина экрана не меньше 1000px */
		--fs-h1: 3.5rem;
		--fs-h3: 2.75rem;
		--fs-h4: 1.50rem;
		--fs-body: 1.125rem;
	}
}


h1, h3, h4 {
	line-height: 1;
	text-transform: lowercase;
	cursor: default;
}
h1::first-letter,
h3::first-letter,
h4::first-letter {
	text-transform: uppercase;
}

/* назначает по всему документу размеры шрифтов,
   определенные выше относительно ширины экрана */
h1 {
	 font-size: var(--fs-h1);
	}
h3 {
	font-size: var(--fs-h3);
}
h4, header {
	font-size: var(--fs-h4);
}
textarea, p, li {
	font-size: var(--fs-body);
	cursor: default;
	list-style-type: none;
}

a {
	text-decoration: none;
	color: inherit;
}


/*  L A Y O U T  */

._container.contacts-main-content {
	display: grid;
	margin: 2em auto;
	gap: 2rem;
}

@media screen and (min-width: 1000px) {

	._container.contacts-main-content {
		/*flex-flow: column wrap-reverse;
		justify-content: space-evenly;
		align-items: flex-end;
		align-content: space-between;
		height: 700px;*/
		/* grid-template создает семь строк и две равные колонки,
		   дает имена линиям, ограничивающим участок 'form' */
		margin: 2em auto;
		grid-template-columns: 1fr [form-start] 1fr [form-end];
		grid-template-rows: minmax(250px, auto) repeat(5, max-content) minmax(150px, auto);
		gap: 1rem;
	}
	._container.contacts-main-content > * {
		grid-column: 1;
	}
	._container.contacts-main-content > form {
		/* переписывает .BEM_contacts__main > *
		   располагает элемент в своем родителе с display:grid в области
		   grid-column - вертикально между линиями с именами 'form-start' и 'form-end',
		   grid-row - растягивает на все строки;
		   display:flex - сам располагает детей как flexible box; */
		/*grid-area: form;*/
		grid-column: form-start / form-end;
		grid-row: 1 / -1;
	}
	form.send-us-message + * {
		align-self: end;
	}
	._container.contacts-main-content > :last-child {
		align-self: start;
	}
}


/*  M O D U L E  */

input._toggle {
	/* прячет input[type="checkbox"], тот активируется через label, см.index.html */
	display: none;
}

._flex-container {
	display: flex;
	flex-direction: column;
	align-items: center;
	align-content: space-between;
	column-gap: 2rem;
}

._flex-container > * {
	/* наводится на всех непосредственных детей ._flex-container */
	flex: initial;
}

/* о б щ е е */

section.home-start {
	background: linear-gradient(0deg, #ebf3fb 8%, rgba(152,195,232,0) 31%);
	overflow-y: auto;
}
section.home-start + * {
	background: linear-gradient(180deg, #ebf3fb 1%, rgba(152,195,232,0) 5%);
}

section.last {
	background: #316099;
	overflow-y: auto;
}

._container {
	/* обеспечивает единое выравние по центру;
	   position:relative устанавливает данные элементы как точки отсчета для наследников с position:absolute
	   (position:absolute отсчитывается от верхнего левого угла ближайшего предка с position:relative,
	   если такого нет - от body); */
	max-width: 500px;
	margin: 0 auto;
	position: relative;
}

._container.home-start {
	/* из-за какой-то нелепости margin-top первых элементов отображается неправильно, overflow-y:auto - исправление */
	min-height: 100vh;
	padding-top: 2rem;
	background-image: url('img/home-start_bg.png');
	background-size: contain;
	background-repeat: no-repeat;
	background-position: bottom;
}

._container.last {
	overflow-y: auto;
	color: white;
	/*background-color: #316099;*/
}

article {
	margin: 0 auto;
	padding: 2em 0;
}

/*@media screen and (min-width: 500px) {

	body {
		/* тень по краям экрана *
		background:
			linear-gradient(
				to right,
				rgba(0,0,0,.5) 0%,
				rgba(0,0,0,.3) 5%,
				rgba(0,0,0,.0) 25%,
				rgba(0,0,0,.0) 75%,
				rgba(0,0,0,.3) 95%,
				rgba(0,0,0,.5) 100%
				),
			#f0f0ff;
	}
}*/

@media screen and (min-width: 1000px) {

	._container {
		max-width: 1000px;
	}

	._container.home-start {
		background-size: unset;
		background-position: right 15% bottom 10%;
	}

	._flex-container {
		flex-flow: row wrap;
		align-items: stretch;
		justify-content: space-between;
	}
}

/* р а з д е л  1 - ш а п к а */

header {
	padding: 1em 0;
	width: 100%;
	display: flex;
	justify-content: space-between;
}
header span {
	color: rgba(63,63,63,.3);
}
header.intro.contacts {
	margin: 0;
}

div.hello {
	width: 70%;
	min-width: 300px;
	/*max-height: 60vh;*/
	margin: 10vh 0;
	padding: 1rem 0;

	-webkit-border-top-right-radius: 1em;
	-webkit-border-bottom-right-radius: 1em;
	-moz-border-top-right-radius: 1em;
	-moz-border-bottom-right-radius: 1em;
	border-top-right-radius: 1em;
	border-bottom-right-radius: 1em;
}

p.hello-text {
	margin-top: 3em;
	margin-bottom: 3em;
	padding-right: 4em;
}

@media screen and (min-width: 1000px) {

	div.hello {
		width: 50%;
		padding: 1.5rem 2rem 1.5rem 0;
	}
}

/* ш а п к а  - header / nav */

.nav {
	cursor: pointer;
	color: #333;
	position: relative;
}
.nav > * {
	height: 100%;
}

.nav.home::after {
	content: ' home';
	/*display: inline-block;*/
	position: absolute;
	left: 130%;
	top: 20%;
	color: #222;
	font-size: 1.75rem;
	opacity: 0;
	transition:
		color .2s .1s ease-in-out,
		text-shadow .4s ease-in-out,
		opacity .2s ease-in-out;
}
.nav.contacts::before {
	content: 'contacts ';
	/*display: inline-block;*/
	position: absolute;
	right: 130%;
	top: 20%;
	color: #222;
	font-size: 1.75rem;
	opacity: 0;
	transition:
		color .2s .1s ease-in-out,
		text-shadow .4s ease-in-out,
		opacity .2s ease-in-out;
}

/*.nav.home:is(:hover, :focus)::after*/
.nav.home:hover::after,
.nav.home:focus::after {
	opacity: 0.8;
	text-shadow:
		0 0 .5em rgb(152,195,232),
		0 0 .1em rgb(152,195,232);
}
/*.nav.contacts:is(:hover, :focus)::before*/
.nav.contacts:hover::before,
.nav.contacts:focus::before {
	opacity: 0.8;
	text-shadow:
		0 0 .5em rgb(152,195,232),
		0 0 .1em rgb(152,195,232);
}

div.error-message {
	/* position:absolute вырывает элемент из общего потока (остальные строятся, будто этого элемента нет),
	   отсчитывается от верхнего левого угла ближайшего предка с position:relative;
	   z-index позволяет отображатся поверх элементов, встречающихся выше в дереве html-документа */
	width: 350px;
	position: absolute;
	top: 20vh;
	left: calc(50% - 175px);
	border-radius: 1em;
	padding: 2em;
	z-index: 1;
	background-color: #ccc;
	color: #222;
	opacity: .95;
	text-align: center;
	display: none;
}
p.error-message {
	margin: 1em;
	padding: .2em;
	border-radius: 2em / 50%;
}
label.error-message {
	margin: 2em;
	font-size: 1.2rem;
	letter-spacing: 1px;
	/*background-color: rgb(90,127,90);*/
	opacity: .9;
}
/*label.error-message:is(:hover, :focus)*/
label.error-message:hover,
label.error-message:focus {
	color: rgb(90,127,90);
	background-color: #eee;
	text-shadow: none;
}
label.error-message:active {
	background-color: #212121;
}

input#error-toggle:checked ~ div.error-message {
	/* '~'' указывает на СЛЕДУЮЩИЕ элементы в ТОМ ЖЕ родителе;
	   делает видимым div.error-message, когда checkbox включен */
	display: block;
}

/* р а з д е л  2 - с о д е р ж и м о е */

.article-header {
	/*border: 2px solid #333;*/
	padding: .9em 1.5em;
	margin-bottom: 1em;
	text-align: center;
	/*background-color: #fff;*/
	color: #222;
}

@media screen and (max-width: 999px) {
	p.subtitle {
		padding: 1em 7% .5em;
	}
}

@media screen and (min-width: 1000px) {
	p.subtitle {
		padding: 1.5em 15% .5em;
	}
}

/* с о д е р ж и м о е (home) - "what we do..." */

div._flex-container.what-we-do > * {
	width: 90%;
	padding: 2em 1em;
	margin: 1em auto;
	border-radius: .5em;
	background-color: #fff;
	box-shadow: .5em 1em 2em rgba(16,112,177,.2);
	transition: box-shadow .2s linear;
}
/*div._flex-container.what-we-do > :is(:hover, :focus)*/
div._flex-container.what-we-do > :hover,
div._flex-container.what-we-do > :focus {
	box-shadow: .7em 1.2em 2em rgba(16,112,177,.4);
}

img.what-we-do {
	display: block;
	margin: 0 auto;
	height: 110px;
}
img.card-img1 {
	position: relative;
	left: -6%;
}
img.card-img2 {
	position: relative;
	left: 1%;
}
img.card-img3 {
	position: relative;
	left: -4%;
}

h4.what-we-do,
p.what-we-do {
	margin: 1em 0;
}

a.learn-more {
	display: inline-block;
	color: rgb(16,112,177);
}

a.learn-more::after {
	/* content: "" обязателен, чтобы псевдоэлементы ::before и ::after отображались;
	   благодаря display:block и background-color отображаются как видимые блоки с заданными width и height;
	   transform:scale(0) сжимает до 0% (см. ниже) */
	content: "";
	display: block;
	position: relative;
	left: -10%;
	height: .2em;
	width: 120%;
	border-radius: 50%;
	color: rgb(90,150,210);
	background-color: rgb(90,150,210);
	transform: scale(0);
	transform-origin: center;
	transition: transform .3s ease-in-out;
}

/*a.learn-more:is(:hover, :focus)::after*/
a.learn-more:hover::after,
a.learn-more:focus::after {
	/* a.learn-more:hover::after - применяется на псевдоэлемент ::after элемента a.learn-more, над последним курсор;
	   меняет сжатие размера с 0% (см.выше) до 100%;
	   transition: transform .3s ease-in-out (см.выше) обеспечивает изменение свойства transform в течение 0,3 сек */
	transform: scale(1);
}

@media screen and (min-width: 500px) {

	div._flex-container.what-we-do > * {
		max-width: 70%;
		margin: 1em auto;
		padding: 2em 1.5em;
	}
}

@media screen and (min-width: 1000px) {

	div._flex-container.what-we-do > * {
		max-width: 30%;
		margin: 0;
	}
}

/* с о д е р ж и м о е (home) - "finished projects" */

div.app-wrap {
	width: 100%;
	margin: 1rem 0;
	position: relative;
	color: white;
}

div.app-present {
	/* псевдоэлементы ::before и ::after считаются содержимым своего элемента (div.app-wrap)
	   и при display:block с position:absolute отражаются поверх остального содержимого;
	   поэтому остальное содержимое положено в div.app-present с index-z:1 (работает при position:relative); */
	width: 100%;
	min-height: 250px;
	padding: 1em 1.5em;
	border-radius: 1em;
	background-size: cover;
	background-position: center;
	position: relative;
	z-index: 1;
	background-color: #aaa;
	transition:
		transform .4s ease-in-out,
		box-shadow .4s ease-in-out;
}
div.sparklite      { background-image: url("img/app-sparklite.jpg"); }
div.car-repetition { background-image: url("img/app-car-repetition.jpg"); }
div.smart-home     { background-image: url("img/app-smarthome.jpg"); }

div.app-wrap::before,
div.app-wrap::after {
	content: '';
	display: block;
	border-radius: 1em;
	background-color: rgba(31,63,127,.6);
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	transition:
		transform .4s ease-in-out,
		box-shadow .4s ease-in-out;
}

/*div.app-wrap:is(:hover, :focus) > div.app-present*/
div.app-wrap:hover > div.app-present,
div.app-wrap:focus > div.app-present {
	transform: translate(-1em, .5em);
	box-shadow: 0.5em 0.5em .5em rgba(31,63,127,.4);
}
/*div.app-wrap:is(:hover, :focus):before*/
div.app-wrap:hover:before,
div.app-wrap:focus:before {
	box-shadow: 0 .25em .5em rgba(31,63,127,.4);
}
/*div.app-wrap:is(:hover, :focus)::after*/
div.app-wrap:hover::after,
div.app-wrap:focus::after {
	transform: translate(1em, -0.5em);
}


@media screen and (min-width: 500px) {

	div.app-present {
		min-height: 300px;
		padding: 2em 3em;
		border-radius: 1.5em;
	}
	div.app-wrap::before,
	div.app-wrap::after {
		padding: 2em 3em;
		border-radius: 1.5em;
	}
}

@media screen and (min-width: 1000px) {

	div.app-present {
		min-height: 480px;
	}

	div.app-wrap {
		/* начальный размер позволяет вместить два элемента, равноменое изменение размеров при подгонке под контейнер
		   https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Controlling_Ratios_of_Flex_Items_Along_the_Main_Ax */
		flex: 1 1 40%; /* <flex-grow> <flex-shrink> <flex-basis> */
	}

	div.app-wrap:first-of-type {
		/* начальный размер первого элемента - вся ширина */
		flex-basis: 100%;
	}

	div.smart-home {
		text-align: right;
	}
}

/* с о д е р ж и м о е (contacts) */

section.header-prominent {
	position: relative;
	background-color: rgba(58,133,217,1);
	background-image:
		linear-gradient(
			to right,
			rgba(58,133,217,1),
			rgba(58,133,217,1) 50%,
			rgba(146,203,251,1) 50%,
			rgba(146,203,251,1) 100%
		);
}

/* два костыля, ибо этот linear-gradient, почему-то отказывается работать */
.crutch-left {
	position: absolute;
	left: 0;
	right: 50vw;
	top: 0;
	bottom: 0;
	background-color: rgb(58,133,217);
}
.crutch-right {
	position: absolute;
	left: 50vw;
	right: 0;
	top: 0;
	bottom: 0;
	background-color: rgb(119,181,240);
}

div.header-prominent {
	padding: .9em 1.5em;
	margin-bottom: 1em;
	background-image: url('img/contacts-head_bg.jpg');
	text-align: center;
}

._flex-container.contacts {
	flex-direction: column;
	/*align-content: space-between;*/
	margin: 2em auto;
	gap: 2rem;
}

form.send-us-message {
	padding: 2.5em 2em;
	display: flex;
	flex-flow: column nowrap;
	justify-content: space-between;
	align-items: stretch;
	border-radius: .5rem;
	background-color: #fff;
	box-shadow: .5em 1em 2em rgba(16,112,177,.2);
}

.send-us-message p {
	line-height: 2.5em;
	font-size: var(--fs-h4);
}

.send-us-message input {
	width: 100%;
	padding: 1rem 2rem;
	font-size: var(--fs-body);
	border: 2px solid rgb(175,200,220);
	border-radius: .5rem;
}

.send-us-message textarea {
	width: 100%;
	min-height: 200px;
	padding: 1rem 1.5rem;
	font-size: var(--fs-body);
	border: 2px solid rgb(175,200,220);
	border-radius: .5rem;
	resize: none;
	cursor: auto;
}

/*:is(button, input, a, label).blue-btn*/
button.blue-btn,
input.blue-btn,
a.blue-btn,
label.blue-btn {
	color: white;
	letter-spacing: 1px;
	text-transform: uppercase;
	background-color: rgb(90,150,210);
	padding: 1rem 2rem;
	border: 2px solid transparent;
	border-radius: .7em;
	box-shadow: .25em .5em 1em rgba(90,150,210,.5);
	transition:
		color .5s ease-in-out,
		background-color .5s ease-in-out,
		border-color .3s ease-in-out,
		text-shadow .2s ease-in-out,
		box-shadow .1s linear;
	cursor: pointer;
}
/*:is(button, input, a, label).blue-btn:is(:hover, :focus)*/
button.blue-btn:hover,
button.blue-btn:focus,
input.blue-btn:hover,
input.blue-btn:focus,
a.blue-btn:hover,
a.blue-btn:focus,
label.blue-btn:hover,
label.blue-btn:focus {
	color: rgb(150,90,210);
	border-color: rgba(150,90,210,.5);
	text-shadow:
		0 0 1em white,
		0 0 .5em white,
		0 0 .1em white;
}
/*:is(button, input, a, label).blue-btn:active*/
button.blue-btn:active,
input.blue-btn:active,
a.blue-btn:active,
label.blue-btn:active {
	box-shadow: 0 0 1em rgb(90,150,210,.3);
}

img.contacts-column {
	display: block;
	/*width: max-content;*/
	justify-self: center;
}

@media screen and (min-width: 1000px) {

	._flex-container.contacts {
		flex-flow: column wrap-reverse;
		justify-content: space-evenly;
		align-items: flex-end;
		align-content: space-between;
		height: 700px;
		margin: 2em auto;
		gap: 1rem;
	}

	._flex-container.contacts > * {
		flex: 0 0 auto;
		max-width: 30%;
	}

	._flex-container.contacts > :first-child {
		flex: 1 1 100%;
		align-self: stretch;
		max-width: unset;
		width: 55%;
	}
}

/* с о д е р ж и м о е (contacts) */

.mapholder {
	padding: .5em 0 3em;
	height: 500px;
}

.mapholder > iframe {
	width: 100%;
	height: 100%;
	padding: 1px;
	box-shadow: 0 0 .4em rgba(50,50,70,.5);
}

ul.contacts-column > li {
	padding: .4rem;
}

.list-icon {
	height: 1em;
	margin-right: .5em;
}

a.contacts-column {
	display: inline-block;
}

a.contacts-column::after {
	content: '';
	display: block;
	width: 100%;
	height: 2px;
	position: relative;
	background-color: rgb(90,150,210);
	transform: scale(0);
	transform-origin: left;
	transition: transform .3s ease-in-out;
}
/*a.contacts-column:is(:hover, :focus)::after*/
a.contacts-column:hover::after,
a.contacts-column:focus::after {
	transform: scale(1);
}

@media screen and (min-width: 1000px) {
	
	.mapholder {
		padding: 3em;
		height: 500px;
	}

	.mapholder > iframe {
		border-radius: 3px;
		padding: 2px;
		box-shadow: 0 0 .4em rgba(50,50,70,.5);
	}
}

/* р а з д е л  3 - п о д в а л */

button.lets-talk {
	display: block;
	min-height: 4em;
	width: 200px;
	margin: -3em auto 1em;
	padding: .5em 1em;
	opacity: .8;
	font-size: var(--fs-body);
	font-weight: bold;
	background-color: lightblue;
	color: #333;
}

/* вместо <hr> */
div.prelast::after {
	/* content: "" обязателен, чтобы псевдоэлементы ::before и ::after отображались;
	   благодаря display:block и background-color отображаются как видимые блоки с заданными width и height; */
	content: "";
	display: block;
	width: 90%;
	height: 1px;
	margin: 1em auto 2em;
	background-color: grey;
	opacity: .5;
}

li.footer-contacts {
	width: 80%;
	padding: 0 1.2em;
	margin: .5em auto;
	text-indent: -1.2em;
}

li.footer-contacts.address::before { content: "A. "; }
li.footer-contacts.tel::before    { content: "T. "; }
li.footer-contacts.email::before  { content: "E. "; }

p.rights {
	margin: 2em 0;
	padding: 0 .5em;
	color: #aaa;
}

@media screen and (min-width: 500px) {

	button.lets-talk {
		min-width: 25%;
	}
}

@media screen and (min-width: 1000px) {

	button.lets-talk {
		width: 20%;
		margin: 0;
		position: absolute;
		right: 0;
		top: 30%;
	}

	li.footer-contacts {
		width: 25%;
		margin: 0 1em;
	}
}